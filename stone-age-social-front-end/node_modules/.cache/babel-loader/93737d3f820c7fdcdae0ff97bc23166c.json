{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  followingPosts: null\n};\nexport const getFollowingPosts = createAsyncThunk(\"/api/v1/followingposts\", async thunkAPI => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/v1/followingposts\",\n    headers: {\n      Authorization: localStorage.getItem(\"psnToken\")\n    },\n    data: {\n      id: localStorage.getItem(\"psnUserId\")\n    }\n  });\n  return response.data.payload;\n});\nasync function insertComment(postId, commentContent) {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/v1/insertcomment\",\n    headers: {\n      Authorization: localStorage.getItem(\"psnToken\")\n    },\n    data: {\n      commentEntity: {\n        userId: localStorage.getItem(\"psnUserId\"),\n        userFullname: localStorage.getItem(\"psnUserFirstName\") + \" \" + localStorage.getItem(\"psnUserLastName\"),\n        content: commentContent\n      },\n      postId: {\n        id: postId\n      }\n    }\n  });\n}\nasync function updateLove(postId, currentUserId) {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/v1/lovepost\",\n    headers: {\n      Authorization: localStorage.getItem(\"psnToken\")\n    },\n    data: {\n      id1: postId,\n      id2: currentUserId\n    }\n  });\n  return response.data;\n}\nasync function updateShare(postId, currentUserId) {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/v1/sharepost\",\n    headers: {\n      Authorization: localStorage.getItem(\"psnToken\")\n    },\n    data: {\n      id1: postId,\n      id2: currentUserId\n    }\n  });\n  return response.data;\n}\nexport const followingPostSlice = createSlice({\n  name: \"followingPostSlice\",\n  initialState,\n  reducers: {\n    addLove: (state, action) => {\n      if (state.followingPosts !== null) {\n        for (let i = 0; i < state.followingPosts.length; i++) {\n          if (state.followingPosts[i].post.id === action.payload.postId) {\n            if (!state.followingPosts[i].post.love.includes(action.payload.userId)) {\n              state.followingPosts[i].post.love.push(action.payload.userId);\n              updateLove(action.payload.postId, action.payload.userId);\n            } else {\n              state.followingPosts[i].post.love = state.followingPosts[i].post.love.filter(item => item !== action.payload.userId);\n              updateLove(action.payload.postId, action.payload.userId);\n            }\n          }\n        }\n      }\n    },\n    addShare: (state, action) => {\n      if (state.followingPosts !== null) {\n        for (let i = 0; i < state.followingPosts.length; i++) {\n          if (state.followingPosts[i].post.id === action.payload.postId) {\n            state.followingPosts[i].post.share.push(action.payload.userId);\n            updateShare(action.payload.postId, action.payload.userId);\n          }\n        }\n      }\n    },\n    addComment: (state, action) => {\n      if (state.followingPosts !== null) {\n        for (let i = 0; i < state.followingPosts.length; i++) {\n          if (state.followingPosts[i].post.id === action.payload.postId) {\n            state.followingPosts[i].post.comment.push(action.payload.newComment);\n            insertComment(action.payload.postId, action.payload.newComment.content);\n          }\n        }\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getFollowingPosts.fulfilled, (state, action) => {\n      state.followingPosts = action.payload;\n    });\n  }\n});\nexport const {\n  addLove,\n  addShare,\n  addComment\n} = followingPostSlice.actions;\nexport default followingPostSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","followingPosts","getFollowingPosts","thunkAPI","response","method","url","headers","Authorization","localStorage","getItem","data","id","payload","insertComment","postId","commentContent","commentEntity","userId","userFullname","content","updateLove","currentUserId","id1","id2","updateShare","followingPostSlice","name","reducers","addLove","state","action","i","length","post","love","includes","push","filter","item","addShare","share","addComment","comment","newComment","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["C:/Users/dell/Desktop/alx_portfolio/Stone_age_social_platform/stone-age-social-front-end/src/feature/followingPost/followingPostSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  followingPosts: null,\n};\n\nexport const getFollowingPosts = createAsyncThunk(\n  \"/api/v1/followingposts\",\n  async (thunkAPI) => {\n    const response = await axios({\n      method: \"post\",\n      url: \"/api/v1/followingposts\",\n      headers: {\n        Authorization: localStorage.getItem(\"psnToken\"),\n      },\n      data: {\n        id: localStorage.getItem(\"psnUserId\"),\n      },\n    });\n\n    return response.data.payload;\n  }\n);\n\nasync function insertComment(postId, commentContent) {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/v1/insertcomment\",\n    headers: {\n      Authorization: localStorage.getItem(\"psnToken\"),\n    },\n    data: {\n      commentEntity: {\n        userId: localStorage.getItem(\"psnUserId\"),\n        userFullname: localStorage.getItem(\"psnUserFirstName\") + \" \" + localStorage.getItem(\"psnUserLastName\"),\n        content: commentContent, \n      },\n      postId: {\n        id: postId,\n      },\n    },\n  });\n}\n\nasync function updateLove(postId, currentUserId) {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/v1/lovepost\",\n        headers: {\n         Authorization: localStorage.getItem(\"psnToken\"),\n        },\n        data: {\n            id1: postId,\n            id2: currentUserId,\n        }\n    });\n    \n    return response.data;\n}\n\nasync function updateShare(postId, currentUserId) {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/v1/sharepost\",\n        headers: {\n         Authorization: localStorage.getItem(\"psnToken\"),\n        },\n        data: {\n            id1: postId,\n            id2: currentUserId,\n        }\n    });\n    \n    return response.data;\n}\n\nexport const followingPostSlice = createSlice({\n  name: \"followingPostSlice\",\n  initialState,\n  reducers: {\n      addLove: (state, action) => {\n        if (state.followingPosts !== null) {\n            for (let i = 0; i < state.followingPosts.length; i++) {\n                if (state.followingPosts[i].post.id === action.payload.postId) {\n                    if (!state.followingPosts[i].post.love.includes(action.payload.userId)) {\n                        state.followingPosts[i].post.love.push(action.payload.userId);\n                        updateLove(action.payload.postId, action.payload.userId);\n                    } else {\n                        state.followingPosts[i].post.love = state.followingPosts[i].post.love.filter(item => item !== action.payload.userId);\n                        updateLove(action.payload.postId, action.payload.userId);\n                    }\n                }\n            }\n        }\n      },\n\n      addShare: (state, action) => {\n          if (state.followingPosts !== null) {\n              for (let i = 0; i < state.followingPosts.length; i++) {\n                  if (state.followingPosts[i].post.id === action.payload.postId) {\n                      state.followingPosts[i].post.share.push(action.payload.userId);\n                      updateShare(action.payload.postId, action.payload.userId);\n                  }\n              }\n          }\n      },\n\n      addComment: (state, action) => {\n        if (state.followingPosts !== null) {\n          for (let i = 0; i < state.followingPosts.length; i++) {\n            if (state.followingPosts[i].post.id === action.payload.postId) {\n              state.followingPosts[i].post.comment.push(action.payload.newComment);\n              insertComment(action.payload.postId, action.payload.newComment.content);\n            }\n          }\n        }\n      }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getFollowingPosts.fulfilled, (state, action) => {\n      state.followingPosts = action.payload;\n    });\n  },\n});\n\nexport const {addLove, addShare, addComment} = followingPostSlice.actions;\nexport default followingPostSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}