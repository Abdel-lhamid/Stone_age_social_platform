{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  profileId: null,\n  postList: null,\n  profileInfo: null\n};\nexport const getProfilePosts = createAsyncThunk(\"api/v1/users/getProfilePosts\", async (userId, thunkAPI) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/v1/myposts\",\n    headers: {\n      Authorization: localStorage.getItem(\"psnToken\")\n    },\n    data: {\n      id: userId\n    }\n  });\n  return response.data.payload;\n});\nexport const getProfileInfo = createAsyncThunk(\"/api/v1/users/profile\", async (userId, thunkAPI) => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/v1/users/profile\",\n    headers: {\n      Authorization: localStorage.getItem(\"psnToken\")\n    },\n    data: {\n      id: userId\n    }\n  });\n  return response.data.payload;\n});\nexport const checkProfileSlice = createSlice({\n  name: \"checkProfileSlice\",\n  initialState,\n  reducers: {\n    getProfileId: (state, action) => {\n      state.profileId = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getProfilePosts.fulfilled, (state, action) => {\n      state.postList = action.payload;\n    });\n    builder.addCase(getProfileInfo.fulfilled, (state, action) => {\n      state.profileInfo = action.payload;\n    });\n  }\n});\nexport const {\n  getProfileId\n} = checkProfileSlice.actions;\nexport default checkProfileSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","profileId","postList","profileInfo","getProfilePosts","userId","thunkAPI","response","method","url","headers","Authorization","localStorage","getItem","data","id","payload","getProfileInfo","checkProfileSlice","name","reducers","getProfileId","state","action","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["C:/Users/dell/Desktop/alx_portfolio/Stone_age_social_platform/social-media-app-frontend/src/feature/checkProfile/checkProfileSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  profileId: null,\n  postList: null,\n  profileInfo: null,\n};\n\nexport const getProfilePosts = createAsyncThunk(\n  \"api/v1/users/getProfilePosts\",\n  async (userId, thunkAPI) => {\n    const response = await axios({\n      method: \"post\",\n      url: \"/api/v1/myposts\",\n      headers: {\n        Authorization: localStorage.getItem(\"psnToken\"),\n      },\n      data: {\n        id: userId,\n      },\n    });\n    return response.data.payload;\n  }\n);\n\nexport const getProfileInfo = createAsyncThunk(\n  \"/api/v1/users/profile\",\n  async (userId, thunkAPI) => {\n    const response = await axios({\n      method: \"post\",\n      url: \"/api/v1/users/profile\",\n      headers: {\n        Authorization: localStorage.getItem(\"psnToken\"),\n      },\n      data: {\n        id: userId,\n      },\n    });\n    return response.data.payload;\n  }\n);\n\nexport const checkProfileSlice = createSlice({\n  name: \"checkProfileSlice\",\n  initialState,\n  reducers: {\n    getProfileId: (state, action) => {\n      state.profileId = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getProfilePosts.fulfilled, (state, action) => {\n      state.postList = action.payload;\n    });\n    builder.addCase(getProfileInfo.fulfilled, (state, action) => {\n      state.profileInfo = action.payload;\n    });\n  },\n});\n\nexport const { getProfileId } = checkProfileSlice.actions;\nexport default checkProfileSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,IAAI;EACfC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGP,gBAAgB,CAC7C,8BAA8B,EAC9B,OAAOQ,MAAM,EAAEC,QAAQ,KAAK;EAC1B,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC;IAC3BS,MAAM,EAAE,MAAM;IACdC,GAAG,EAAE,iBAAiB;IACtBC,OAAO,EAAE;MACPC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU;IAChD,CAAC;IACDC,IAAI,EAAE;MACJC,EAAE,EAAEV;IACN;EACF,CAAC,CAAC;EACF,OAAOE,QAAQ,CAACO,IAAI,CAACE,OAAO;AAC9B,CACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGpB,gBAAgB,CAC5C,uBAAuB,EACvB,OAAOQ,MAAM,EAAEC,QAAQ,KAAK;EAC1B,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC;IAC3BS,MAAM,EAAE,MAAM;IACdC,GAAG,EAAE,uBAAuB;IAC5BC,OAAO,EAAE;MACPC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU;IAChD,CAAC;IACDC,IAAI,EAAE;MACJC,EAAE,EAAEV;IACN;EACF,CAAC,CAAC;EACF,OAAOE,QAAQ,CAACO,IAAI,CAACE,OAAO;AAC9B,CACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAGpB,WAAW,CAAC;EAC3CqB,IAAI,EAAE,mBAAmB;EACzBnB,YAAY;EACZoB,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACrB,SAAS,GAAGsB,MAAM,CAACP,OAAO;IAClC;EACF,CAAC;EACDQ,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACtB,eAAe,CAACuB,SAAS,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5DD,KAAK,CAACpB,QAAQ,GAAGqB,MAAM,CAACP,OAAO;IACjC,CAAC,CAAC;IACFS,OAAO,CAACC,OAAO,CAACT,cAAc,CAACU,SAAS,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC3DD,KAAK,CAACnB,WAAW,GAAGoB,MAAM,CAACP,OAAO;IACpC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK;AAAa,CAAC,GAAGH,iBAAiB,CAACU,OAAO;AACzD,eAAeV,iBAAiB,CAACW,OAAO"},"metadata":{},"sourceType":"module"}